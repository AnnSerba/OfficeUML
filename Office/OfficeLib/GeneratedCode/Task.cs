//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан инструментальным средством
//     В случае повторного создания кода изменения, внесенные в этот файл, будут потеряны.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Task
{
    private Time time;

    private SortedList<int, Person> listClients;

    private Date date;



    public virtual Time Time
    {
        get
        {
            return time;
        }
        set
        {
            ;
        }
    }

    public virtual SortedList<int, Person> ListClients
    {
        get
        {
            return listClients;
        }
        set
        {
            ;
        }
    }

    public virtual Date Date
    {
        get
        {
            return date;
        }
        set
        {
            ;
        }
    }
    public virtual string ToString()
    {
        string line = " ////\n" + "Дата:" + Date.ToString() + " Время:" + Time.ToString();
        if (ListClients.Count != 0)
        {
            line += "Клиенты:\n";
            for (int i = 0; i < ListClients.Count; i++)
            {
                line += ListClients.ToString() + "\n";
            }
        }
        line += "\n//// \n";
        return line;
    }
    public Task()
    {
        time = new Time();
        date = new Date();
        listClients = new SortedList<int, Person>();
    }

    public virtual string Change(int hour, int minute, int day, int month, int year)
    {
        string line = "";
        if ((year < DateTime.Now.Year) || (year == DateTime.Now.Year && month < DateTime.Now.Month) ||
            (year == DateTime.Now.Year && month == DateTime.Now.Month && day < DateTime.Now.Day) ||
            (year == DateTime.Now.Year && month == DateTime.Now.Month && day == DateTime.Now.Day &&
            (hour < DateTime.Now.Hour || hour == DateTime.Now.Hour && minute < DateTime.Now.Minute)))
        {
            line += "Создание задачи возможно только на будущее вмемя";
            line += Time.StatusError(hour, minute);
            line += Date.StatusError(day, month, year);
        }
        else
        {
            if (Time.Change(hour, minute) == true)
            {
                line += "Время успешно изменено ";
            }
            else
            {
                line += Time.StatusError(hour, minute);
            }
            if (Date.Change(day, month, year) == true)
            {
                line += "Дата успешно изменена ";
            }
            else
            {
                line += Date.StatusError(day, month, year);
            }
        }
        return line;
    }

    public virtual bool AddListClients(int number, Person person)
    {
        if (ListClients.ContainsKey(number) == false)
        {
            ListClients.Add(number, person);
        }
        else
        {
            return false;
        }
        return true;
    }

    public virtual bool DeleteListClients(int number)
    {
        if (ListClients.ContainsKey(number) == true)
        {
            ListClients.Remove(number);
        }
        else
        {
            return false;
        }
        return true;
    }

}

