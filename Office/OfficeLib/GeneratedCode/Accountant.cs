//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан инструментальным средством
//     В случае повторного создания кода изменения, внесенные в этот файл, будут потеряны.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Accountant
{
    private Register register;
    private string name;
	public virtual Register Register
	{
        get
        {
            return register;
        }
        set
        {
            register = value;
        }
	}

	public virtual string Menu()
	{
        string line = "----------------------\n";
        line += "1 - Просмотр номеров и полей об оплате документа в реестре\n";
        line += "2 - Поиск документа\n";
        line += "3 - Изменить данные об оплате\n";
        line += "0 - Выход\n";
        line += "------------------\n";
        return line;
	}

	public Accountant(string name, Register register)
	{
        this.Register = register;
        this.name = name;
        while (true)
        {
            try
            {
                Console.WriteLine(Menu());
                string key = Console.ReadLine();
                if (key == "0")
                {
                    break;
                }
                else if (key == "1")
                {
                   Console.WriteLine(register.ToStringNumberCostPayment(register.ListDocuments));
                }
                else if (key == "2")
                {
                    Console.WriteLine(register.ToStringNumberCostPayment(register.SearchDocument(null,new List<bool>())));
                }
                else if (key == "3")
                {
                    int number = InputStringToInt("Введите номер документа (0 - Отмена)", 0, int.MaxValue);
                    if (number != 0)
                    {
                        double cost = InputStringToDouble("Введите стоимость услуги (-1 - Отмена)", -1, double.MaxValue);
                        if (cost != -1)
                        {
                            Console.WriteLine("Оплачено?(0 - Отмена, 1 - Да, ... - Нет");
                            key = Console.ReadLine();
                            if (key == "0")
                            {
                                return;
                            }
                            else if (key == "1")
                            {
                                Console.WriteLine(register.ChangeAttributeFromPayment(number, true, cost, name));
                            }
                            else
                            {
                                Console.WriteLine(register.ChangeAttributeFromPayment(number, false, cost, name));
                            }

                        }
                        
                    }

                }
                else
                {
                    Console.WriteLine("Ошибка ввода");
                }
            }
            catch(Exception e)
            {
                Console.WriteLine(e);
            }

        }

	}
    public int InputStringToInt(string line, int limit1, int limit2)
    {
        string input = "";
        int result = 0;
        do
        {
            Console.WriteLine(line);
            input = Console.ReadLine();
            if (int.TryParse(input, out result) == false)
            {
                Console.WriteLine("Ошибка ввода");
            }
            if (result < limit1 || result > limit2)
            {
                Console.WriteLine("Введённое значение логически неверно");
            }
        } while (int.TryParse(input, out result) == false || result < limit1 || result > limit2);
        return result;
    }
    public double InputStringToDouble(string line, double limit1, double limit2)
    {
        string input = "";
        double result = 0;
        do
        {
            Console.WriteLine(line);
            input = Console.ReadLine();
            if (double.TryParse(input, out result) == false)
            {
                Console.WriteLine("Ошибка ввода");
            }
            if (result < limit1 || result > limit2)
            {
                Console.WriteLine("Введённое значение логически неверно");
            }
        } while (double.TryParse(input, out result) == false || result < limit1 || result > limit2);
        return result;
    }
}

