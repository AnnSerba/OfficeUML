//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан инструментальным средством
//     В случае повторного создания кода изменения, внесенные в этот файл, будут потеряны.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Secretary
{
    private Schedule schedule;
    private Register register;
	public virtual Schedule Schedule
	{
        get
        {
            return schedule;
        }
        set
        {
            schedule = value;
        }
	}

	public virtual Register Register
	{
        get
        {
            return register;
        }
        set
        {
            register = value;
        }
	}

	public virtual string Menu()
	{
        string line = "----------------------\n";
        line += "1 - Просмотр расписания\n";
        line += "2 - Поиск задачи в расписании\n";
        line += "3 - Добавить задачу в расписание\n";
        line += "4 - Удалить задачу из расписания\n";
        line += "5 - Изменить задачу в расписание\n";
        line += "6 - Просмотр клиентов в реестре\n";
        line += "7 - Поиск клиентов в реестре\n";
        line += "8 - Просмотр документов в реестре\n";
        line += "9 - Поиск документов в реестре\n";
        line += "0 - Выход\n";
        line += "------------------\n";
        return line;
	}

    public Secretary(string name, Register register)
    {
        try
        {
            Register = register;
            string nameChief = "";
            Console.WriteLine("Введите имя своего начальника");
            nameChief = Console.ReadLine();
            Schedule = new Schedule(Register, nameChief);
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            Console.ReadLine();
        }

        while (true)
        {
            try
            {
                Console.WriteLine(Menu());
                string key = Console.ReadLine();
                if (key == "0")
                {
                 //   Schedule.WriterInFile();
                    break;
                }
                else if (key == "1")
                {
                    Console.WriteLine(Schedule.ToString(Schedule.ListTask));
                }
                else if (key == "2")
                {
                    Console.WriteLine(Schedule.ToString(Schedule.SearchTaskToListTask(new Date(1, 1, 1))));
                }
                else if (key == "3")
                {
                    AddTask();
                }
                else if (key == "4")
                {
                    DeleteTask();
                }
                else if (key == "5")
                {
                    ChangeTask();
                }
                else if (key == "6")
                {
                    Console.WriteLine(register.ToStringAllClients(register.ListClients));
                }
                else if (key == "7")
                {
                    Console.WriteLine(register.ToStringAllClients(register.SearchClient(null,new List<bool>())));
                }
                else if (key == "8")
                {
                    Console.WriteLine(register.ToStringAllDocument(register.ListDocuments));
                }
                else if (key == "9")
                {
                    Console.WriteLine(register.ToStringAllDocument(register.SearchDocument(null,new List<bool>())));
                }
                else
                {
                    Console.WriteLine("Ошибка ввода");
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e.Message);
            }
        }
    }
    public int InputStringToInt(string line,int limit1,int limit2)
    {
        string input = "";
        int result = 0;
        do
        {
            Console.WriteLine(line);
            input = Console.ReadLine();
            if (int.TryParse(input, out result) == false)
            {
                Console.WriteLine("Ошибка ввода");
            }
            if (result < limit1 || result > limit2)
            {
                Console.WriteLine("Введённое значение логически неверно");
            }
        } while (int.TryParse(input, out result) == false || result < limit1 || result > limit2);
        return result;
    }
    public virtual void AddTask()
    { 
        int hour=InputStringToInt("Введите время:час",8,17);
        int minute = InputStringToInt("Введите время:минуту",0,59);
        Time time = new Time(hour,minute);
        int day = InputStringToInt("Введите дату:день",1,31);
        int month = InputStringToInt("Введите дату:месяц",1,12);
        int year = InputStringToInt("Введите дату:год",2000,2060);
        Date date = new Date(day, month, year);
        Console.WriteLine(Schedule.AddTaskToListTask(time, date));
        do
        {
            Console.WriteLine("Добавить клиента? (1 - Да)");
            if (Console.ReadLine()=="1")
            {
                AddClient(Schedule.SearchTaskToListTask(time,date));
            }
            else
            {
                break;
            }
        } while (true);
    }
    public virtual void DeleteTask() {
        int hour = InputStringToInt("Введите время:час", 8, 17);
        int minute = InputStringToInt("Введите время:минуту", 0, 59);
        Time time = new Time(hour, minute);
        int day = InputStringToInt("Введите дату:день", 1, 31);
        int month = InputStringToInt("Введите дату:месяц", 1, 12);
        int year = InputStringToInt("Введите дату:год", 2000, 2060);
        Date date = new Date(day, month, year);
        Console.WriteLine(Schedule.DeleteTaskToListTask(time, date));
    }
    public virtual void ChangeTask()
    {
        throw new System.NotImplementedException();
    }
    public virtual void AddClient(Task task)
    {
        throw new System.NotImplementedException();
    }
    public virtual void DeleteClient(Task task)
    {

    }
}

